<?php

/**
 * Base_Product
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $sku
 * @property string $name
 * @property string $path
 * @property integer $route_id
 * @property boolean $active
 * @property decimal $price
 * @property clob $short_description
 * @property clob $description
 * @property float $weight
 * @property decimal $shipping
 * @property decimal $additional_shipping
 * @property Doctrine_Collection $Categories
 * @property Route $Route
 * 
 * @package    Simplecart
 * @subpackage Model
 * @author     spekkionu <spekkionu@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Base_Product extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('product');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('sku', 'string', 50, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => '50',
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => '100',
             ));
        $this->hasColumn('path', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => '255',
             ));
        $this->hasColumn('route_id', 'integer', 4, array(
             'type' => 'integer',
             'unique' => true,
             'unsigned' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => '4',
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => true,
             'unsigned' => true,
             ));
        $this->hasColumn('price', 'decimal', 8, array(
             'type' => 'decimal',
             'length' => 8,
             'scale' => 2,
             'unsigned' => true,
             ));
        $this->hasColumn('short_description', 'clob', 65532, array(
             'type' => 'clob',
             'length' => '65532',
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('weight', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 3,
             'default' => 0,
             'unsigned' => true,
             ));
        $this->hasColumn('shipping', 'decimal', 8, array(
             'type' => 'decimal',
             'length' => 8,
             'scale' => 2,
             'unsigned' => true,
             ));
        $this->hasColumn('additional_shipping', 'decimal', 8, array(
             'type' => 'decimal',
             'length' => 8,
             'scale' => 2,
             'unsigned' => true,
             ));

        $this->check('price > 0');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Category as Categories', array(
             'refClass' => 'ProductCategory',
             'local' => 'product_id',
             'foreign' => 'category_id'));

        $this->hasOne('Route', array(
             'local' => 'route_id',
             'foreign' => 'id',
             'owningSide' => true));
    }
}